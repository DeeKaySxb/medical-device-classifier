// Mocks generated by Mockito 5.4.2 from annotations
// in medical_device_classifier/test/bootstrap_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i10;
import 'dart:ui' as _i6;

import 'package:medical_device_classifier/content_files/content_loader_impl.dart'
    as _i12;
import 'package:medical_device_classifier/shared_preferences/mdc_shared_preferences.dart'
    as _i2;
import 'package:medical_device_classifier/shared_preferences/shared_preferences_repository.dart'
    as _i5;
import 'package:medical_device_classifier/supabase/database/database_fetch_data_repository.dart'
    as _i3;
import 'package:medical_device_classifier/supabase/storage/storage_download_repository.dart'
    as _i4;
import 'package:medical_device_classifier/supabase/supabase_client.dart' as _i7;
import 'package:medical_device_classifier/supabase/supabase_wrapper.dart'
    as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shared_preferences/shared_preferences.dart' as _i11;
import 'package:supabase_flutter/supabase_flutter.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMDCSharedPreferences_0 extends _i1.SmartFake
    implements _i2.MDCSharedPreferences {
  _FakeMDCSharedPreferences_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIDatabaseFetchDataRepository_1 extends _i1.SmartFake
    implements _i3.IDatabaseFetchDataRepository {
  _FakeIDatabaseFetchDataRepository_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIStorageDownloadRepository_2 extends _i1.SmartFake
    implements _i4.IStorageDownloadRepository {
  _FakeIStorageDownloadRepository_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSharedPreferencesRepository_3 extends _i1.SmartFake
    implements _i5.SharedPreferencesRepository {
  _FakeSharedPreferencesRepository_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocale_4 extends _i1.SmartFake implements _i6.Locale {
  _FakeLocale_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SupabaseClientImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseClientImpl extends _i1.Mock
    implements _i7.SupabaseClientImpl {
  @override
  set supabaseClient(_i8.SupabaseClient? _supabaseClient) => super.noSuchMethod(
        Invocation.setter(
          #supabaseClient,
          _supabaseClient,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setSupabaseWrapper(_i9.SupabaseWrapper? supabaseWrapper) =>
      super.noSuchMethod(
        Invocation.method(
          #setSupabaseWrapper,
          [supabaseWrapper],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Future<void> initialize({
    required String? supabaseURL,
    required String? supabaseAnonKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
          {
            #supabaseURL: supabaseURL,
            #supabaseAnonKey: supabaseAnonKey,
          },
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [SharedPreferencesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferencesRepository extends _i1.Mock
    implements _i5.SharedPreferencesRepository {
  @override
  _i2.MDCSharedPreferences get mdcSharedPreferences => (super.noSuchMethod(
        Invocation.getter(#mdcSharedPreferences),
        returnValue: _FakeMDCSharedPreferences_0(
          this,
          Invocation.getter(#mdcSharedPreferences),
        ),
        returnValueForMissingStub: _FakeMDCSharedPreferences_0(
          this,
          Invocation.getter(#mdcSharedPreferences),
        ),
      ) as _i2.MDCSharedPreferences);

  @override
  set mdcSharedPreferences(_i2.MDCSharedPreferences? _mdcSharedPreferences) =>
      super.noSuchMethod(
        Invocation.setter(
          #mdcSharedPreferences,
          _mdcSharedPreferences,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Future<bool> delete({required String? key}) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {#key: key},
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  String read({required String? key}) => (super.noSuchMethod(
        Invocation.method(
          #read,
          [],
          {#key: key},
        ),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);

  @override
  _i10.Future<bool> setString({
    required String? key,
    required String? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [],
          {
            #key: key,
            #value: value,
          },
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
}

/// A class which mocks [MDCSharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockMDCSharedPreferences extends _i1.Mock
    implements _i2.MDCSharedPreferences {
  @override
  set sharedPreferences(_i11.SharedPreferences? _sharedPreferences) =>
      super.noSuchMethod(
        Invocation.setter(
          #sharedPreferences,
          _sharedPreferences,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Future<void> initializeSharedPreferences() => (super.noSuchMethod(
        Invocation.method(
          #initializeSharedPreferences,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [ContentLoaderImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockContentLoaderImpl extends _i1.Mock implements _i12.ContentLoaderImpl {
  @override
  _i3.IDatabaseFetchDataRepository get databaseFetchDataRepository =>
      (super.noSuchMethod(
        Invocation.getter(#databaseFetchDataRepository),
        returnValue: _FakeIDatabaseFetchDataRepository_1(
          this,
          Invocation.getter(#databaseFetchDataRepository),
        ),
        returnValueForMissingStub: _FakeIDatabaseFetchDataRepository_1(
          this,
          Invocation.getter(#databaseFetchDataRepository),
        ),
      ) as _i3.IDatabaseFetchDataRepository);

  @override
  _i4.IStorageDownloadRepository get storageDownloadRepository =>
      (super.noSuchMethod(
        Invocation.getter(#storageDownloadRepository),
        returnValue: _FakeIStorageDownloadRepository_2(
          this,
          Invocation.getter(#storageDownloadRepository),
        ),
        returnValueForMissingStub: _FakeIStorageDownloadRepository_2(
          this,
          Invocation.getter(#storageDownloadRepository),
        ),
      ) as _i4.IStorageDownloadRepository);

  @override
  _i5.SharedPreferencesRepository get sharedPreferencesRepository =>
      (super.noSuchMethod(
        Invocation.getter(#sharedPreferencesRepository),
        returnValue: _FakeSharedPreferencesRepository_3(
          this,
          Invocation.getter(#sharedPreferencesRepository),
        ),
        returnValueForMissingStub: _FakeSharedPreferencesRepository_3(
          this,
          Invocation.getter(#sharedPreferencesRepository),
        ),
      ) as _i5.SharedPreferencesRepository);

  @override
  _i6.Locale get currentLocale => (super.noSuchMethod(
        Invocation.getter(#currentLocale),
        returnValue: _FakeLocale_4(
          this,
          Invocation.getter(#currentLocale),
        ),
        returnValueForMissingStub: _FakeLocale_4(
          this,
          Invocation.getter(#currentLocale),
        ),
      ) as _i6.Locale);

  @override
  _i10.Future<void> load(
          {required _i12.ContentLoaderType? contentLoaderType}) =>
      (super.noSuchMethod(
        Invocation.method(
          #load,
          [],
          {#contentLoaderType: contentLoaderType},
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}
