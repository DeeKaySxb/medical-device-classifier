// Mocks generated by Mockito 5.4.2 from annotations
// in medical_device_classifier/test/supabase/supabase_client_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;

import 'package:functions_client/functions_client.dart' as _i3;
import 'package:gotrue/gotrue.dart' as _i2;
import 'package:medical_device_classifier/supabase/supabase_wrapper.dart'
    as _i10;
import 'package:mockito/mockito.dart' as _i1;
import 'package:postgrest/postgrest.dart' as _i6;
import 'package:realtime_client/realtime_client.dart' as _i5;
import 'package:storage_client/storage_client.dart' as _i4;
import 'package:supabase/src/supabase_query_builder.dart' as _i7;
import 'package:supabase_flutter/supabase_flutter.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGoTrueClient_0 extends _i1.SmartFake implements _i2.GoTrueClient {
  _FakeGoTrueClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFunctionsClient_1 extends _i1.SmartFake
    implements _i3.FunctionsClient {
  _FakeFunctionsClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupabaseStorageClient_2 extends _i1.SmartFake
    implements _i4.SupabaseStorageClient {
  _FakeSupabaseStorageClient_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRealtimeClient_3 extends _i1.SmartFake
    implements _i5.RealtimeClient {
  _FakeRealtimeClient_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestClient_4 extends _i1.SmartFake
    implements _i6.PostgrestClient {
  _FakePostgrestClient_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupabaseQueryBuilder_5 extends _i1.SmartFake
    implements _i7.SupabaseQueryBuilder {
  _FakeSupabaseQueryBuilder_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestFilterBuilder_6<T> extends _i1.SmartFake
    implements _i6.PostgrestFilterBuilder<T> {
  _FakePostgrestFilterBuilder_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRealtimeChannel_7 extends _i1.SmartFake
    implements _i5.RealtimeChannel {
  _FakeRealtimeChannel_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupabaseClient_8 extends _i1.SmartFake
    implements _i8.SupabaseClient {
  _FakeSupabaseClient_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SupabaseClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseClient extends _i1.Mock implements _i8.SupabaseClient {
  @override
  String get supabaseUrl => (super.noSuchMethod(
        Invocation.getter(#supabaseUrl),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);

  @override
  String get supabaseKey => (super.noSuchMethod(
        Invocation.getter(#supabaseKey),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);

  @override
  String get schema => (super.noSuchMethod(
        Invocation.getter(#schema),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);

  @override
  String get restUrl => (super.noSuchMethod(
        Invocation.getter(#restUrl),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);

  @override
  String get realtimeUrl => (super.noSuchMethod(
        Invocation.getter(#realtimeUrl),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);

  @override
  String get authUrl => (super.noSuchMethod(
        Invocation.getter(#authUrl),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);

  @override
  String get storageUrl => (super.noSuchMethod(
        Invocation.getter(#storageUrl),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);

  @override
  String get functionsUrl => (super.noSuchMethod(
        Invocation.getter(#functionsUrl),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);

  @override
  _i2.GoTrueClient get auth => (super.noSuchMethod(
        Invocation.getter(#auth),
        returnValue: _FakeGoTrueClient_0(
          this,
          Invocation.getter(#auth),
        ),
        returnValueForMissingStub: _FakeGoTrueClient_0(
          this,
          Invocation.getter(#auth),
        ),
      ) as _i2.GoTrueClient);

  @override
  set auth(_i2.GoTrueClient? _auth) => super.noSuchMethod(
        Invocation.setter(
          #auth,
          _auth,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.FunctionsClient get functions => (super.noSuchMethod(
        Invocation.getter(#functions),
        returnValue: _FakeFunctionsClient_1(
          this,
          Invocation.getter(#functions),
        ),
        returnValueForMissingStub: _FakeFunctionsClient_1(
          this,
          Invocation.getter(#functions),
        ),
      ) as _i3.FunctionsClient);

  @override
  set functions(_i3.FunctionsClient? _functions) => super.noSuchMethod(
        Invocation.setter(
          #functions,
          _functions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.SupabaseStorageClient get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeSupabaseStorageClient_2(
          this,
          Invocation.getter(#storage),
        ),
        returnValueForMissingStub: _FakeSupabaseStorageClient_2(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i4.SupabaseStorageClient);

  @override
  set storage(_i4.SupabaseStorageClient? _storage) => super.noSuchMethod(
        Invocation.setter(
          #storage,
          _storage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.RealtimeClient get realtime => (super.noSuchMethod(
        Invocation.getter(#realtime),
        returnValue: _FakeRealtimeClient_3(
          this,
          Invocation.getter(#realtime),
        ),
        returnValueForMissingStub: _FakeRealtimeClient_3(
          this,
          Invocation.getter(#realtime),
        ),
      ) as _i5.RealtimeClient);

  @override
  set realtime(_i5.RealtimeClient? _realtime) => super.noSuchMethod(
        Invocation.setter(
          #realtime,
          _realtime,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.PostgrestClient get rest => (super.noSuchMethod(
        Invocation.getter(#rest),
        returnValue: _FakePostgrestClient_4(
          this,
          Invocation.getter(#rest),
        ),
        returnValueForMissingStub: _FakePostgrestClient_4(
          this,
          Invocation.getter(#rest),
        ),
      ) as _i6.PostgrestClient);

  @override
  set rest(_i6.PostgrestClient? _rest) => super.noSuchMethod(
        Invocation.setter(
          #rest,
          _rest,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);

  @override
  set headers(Map<String, String>? headers) => super.noSuchMethod(
        Invocation.setter(
          #headers,
          headers,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.SupabaseQueryBuilder from(String? table) => (super.noSuchMethod(
        Invocation.method(
          #from,
          [table],
        ),
        returnValue: _FakeSupabaseQueryBuilder_5(
          this,
          Invocation.method(
            #from,
            [table],
          ),
        ),
        returnValueForMissingStub: _FakeSupabaseQueryBuilder_5(
          this,
          Invocation.method(
            #from,
            [table],
          ),
        ),
      ) as _i7.SupabaseQueryBuilder);

  @override
  _i6.PostgrestClient useSchema(String? schema) => (super.noSuchMethod(
        Invocation.method(
          #useSchema,
          [schema],
        ),
        returnValue: _FakePostgrestClient_4(
          this,
          Invocation.method(
            #useSchema,
            [schema],
          ),
        ),
        returnValueForMissingStub: _FakePostgrestClient_4(
          this,
          Invocation.method(
            #useSchema,
            [schema],
          ),
        ),
      ) as _i6.PostgrestClient);

  @override
  _i6.PostgrestFilterBuilder<dynamic> rpc(
    String? fn, {
    Map<String, dynamic>? params,
    _i6.FetchOptions? options = const _i6.FetchOptions(),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #rpc,
          [fn],
          {
            #params: params,
            #options: options,
          },
        ),
        returnValue: _FakePostgrestFilterBuilder_6<dynamic>(
          this,
          Invocation.method(
            #rpc,
            [fn],
            {
              #params: params,
              #options: options,
            },
          ),
        ),
        returnValueForMissingStub: _FakePostgrestFilterBuilder_6<dynamic>(
          this,
          Invocation.method(
            #rpc,
            [fn],
            {
              #params: params,
              #options: options,
            },
          ),
        ),
      ) as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i5.RealtimeChannel channel(
    String? name, {
    _i5.RealtimeChannelConfig? opts = const _i5.RealtimeChannelConfig(),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #channel,
          [name],
          {#opts: opts},
        ),
        returnValue: _FakeRealtimeChannel_7(
          this,
          Invocation.method(
            #channel,
            [name],
            {#opts: opts},
          ),
        ),
        returnValueForMissingStub: _FakeRealtimeChannel_7(
          this,
          Invocation.method(
            #channel,
            [name],
            {#opts: opts},
          ),
        ),
      ) as _i5.RealtimeChannel);

  @override
  List<_i5.RealtimeChannel> getChannels() => (super.noSuchMethod(
        Invocation.method(
          #getChannels,
          [],
        ),
        returnValue: <_i5.RealtimeChannel>[],
        returnValueForMissingStub: <_i5.RealtimeChannel>[],
      ) as List<_i5.RealtimeChannel>);

  @override
  _i9.Future<String> removeChannel(_i5.RealtimeChannel? channel) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeChannel,
          [channel],
        ),
        returnValue: _i9.Future<String>.value(''),
        returnValueForMissingStub: _i9.Future<String>.value(''),
      ) as _i9.Future<String>);

  @override
  _i9.Future<List<String>> removeAllChannels() => (super.noSuchMethod(
        Invocation.method(
          #removeAllChannels,
          [],
        ),
        returnValue: _i9.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i9.Future<List<String>>.value(<String>[]),
      ) as _i9.Future<List<String>>);

  @override
  _i9.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [SupabaseWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseWrapper extends _i1.Mock implements _i10.SupabaseWrapper {
  @override
  _i9.Future<_i8.SupabaseClient> initialize({
    required String? supabaseURL,
    required String? supabaseAnonKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
          {
            #supabaseURL: supabaseURL,
            #supabaseAnonKey: supabaseAnonKey,
          },
        ),
        returnValue: _i9.Future<_i8.SupabaseClient>.value(_FakeSupabaseClient_8(
          this,
          Invocation.method(
            #initialize,
            [],
            {
              #supabaseURL: supabaseURL,
              #supabaseAnonKey: supabaseAnonKey,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i8.SupabaseClient>.value(_FakeSupabaseClient_8(
          this,
          Invocation.method(
            #initialize,
            [],
            {
              #supabaseURL: supabaseURL,
              #supabaseAnonKey: supabaseAnonKey,
            },
          ),
        )),
      ) as _i9.Future<_i8.SupabaseClient>);
}
